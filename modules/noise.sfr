:m noise-permute ( x )
	x 34 * 1 + x * 289 mod
;

:m pnoise-fade ( t )
	t 6 * 15 - t * 10 + t 2 vec2 ** *
;

: pnoise-2d ( v:vec2 -> float )
	v .xyxy floor [ 0 0 1 1 ] + 289 mod =Pi
	v .xyxy fract [ 0 0 1 1 ] - =Pf

	Pi .xzxz noise-permute Pi .yyww + noise-permute =>i
	i 41 / fract 2 * 1 - =gx
	gx abs .5 - =gy
	gx !round - =gx

	[ gx .x gy .x ] =>g00
	[ gx .y gy .y ] =>g10
	[ gx .z gy .z ] =>g01
	[ gx .w gy .w ] =>g11

	gx gx * gy gy * + sqrt inversesqrt =norm
	g00 norm .x * Pf .xy dot =>n00
	g10 norm .z * Pf .zy dot =>n10
	g01 norm .y * Pf .xw dot =>n01
	g11 norm .w * Pf .zw dot =>n11

	Pf .xy pnoise-fade =fade_xy
	[ n00 n01 ] [ n10 n11 ] fade_xy .x mix =n_x
	n_x .x.y fade_xy .y mix 2.3 *
;

: snoise-2d ( v:vec2 -> float )
	[
		 0.211324865405187
		 0.366025403784439
		-0.577350269189626
		 0.024390243902439
	] =C

	v C .yy dot v + floor =i
	v i - i C .xx dot + =x0

	[ 1 0 ] [ 0 1 ] x0 \> select =i1
	x0 .xyxy C .xxzz + [ i1 0 0 ] - =x12

	i 289 mod =i
	[ 0 i1 .y 1 ] i .y + noise-permute i .x + [ 0 i1 .x 1 ] + noise-permute =p

			.5
			[
				x0 dup dot
				x12 .xy dup dot
				x12 .zw dup dot
			]
		-
	0 max 4 vec3 ** =m

	p C .www * fract 2 * 1 - =x
	x abs .5 - =h
	x round =>ox
	x ox - =a0
	a0 a0 * h h * + inversesqrt m * =m

		m
		[
			a0 .x x0 .x * h .x x0 .y * +
			a0 .yz x12 .xz * h .yz x12 .yw * +
		]
	dot 130 *
;
