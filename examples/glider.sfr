import[ distance-2d ]

:globals
	@vec3 uniform =iResolution
	@float uniform =iGlobalTime
	@vec4 uniform =iDate
;
:m time iGlobalTime ;

: arc ( p:vec2 d:vec3 -> float )
		p [ -1 1 ] * cart->polar [ pi 2 / d .z ] - polar-norm
		[
			d .x dup tau eps - - 0 1 clamp inf * +
			d .y
		]
	box
;

: bc ( p:vec2 r:float -> float )
		p r box
		p r circle
		time 8 mod 4 - abs 1 2 clamp 1 -
	mix
;

:m glider ( f p )
	[
		p [   0 .5 ] - *f
		p [ -.5  0 ] + *f
		p [ -.5 .5 ] + *f
		p [  .5 .5 ] + *f
		p [   0 .5 ] + *f
	] union
;

: tbox ( p:vec2 -> float )
	p .2 bc
;

: inner ( sp:vec2 -> float )
	&tbox sp glider
;

: subgl ( gp:vec2 -> float )
	&inner gp .325 scale
;

: distance-field ( p:vec2 -> vec4 )
	[
		&subgl p glider
		0 0 0
	]
;

:m bgcolor [ 1 1 1 ] ;

:m texture ( d p )
	p distance-field .yzw =mat
	d neg 100 * 0 1 clamp =val
	[
			bgcolor
			val mat *
			val
		mix
	]
;

iResolution frag->position =p
[ { distance-field .x } p gradient p texture 1 ] =gl_FragColor
