import[ distance-2d ]

:globals
	@vec3 uniform =iResolution
	@float uniform =iGlobalTime
	@vec4 uniform =iDate
;
:m time iGlobalTime ;

: slow ( n:float -> float )
	1 1 n abs - 1.1 ** - n sign *
;

:m mvector ( ltime )
	[
			ltime 2 * sin slow
			time 1.2 ** pi / .2 +
		*
		.5 1 time eps + / -
	] polar->cart
;

: calc-motion ( o:vec2 -> vec2 )
	time o length 10 / - mvector
;

: fluidbox ( p:vec2 -> float )
	$[-1:+1:.5] /{ ( x )
		$[-1:+1:.5] /{ ( y )
				p [ x y ] 20 / +
				[ x y ] calc-motion
			+ .05 circle
		} \min
	} \min
;

:m obj-count 3 ;
: distance-field ( p:vec2 -> vec4 )
	[
		obj-count upto /{ ( i )
			{ ( rp )
				rp [ .5 0 ] - fluidbox
			} p 360 obj-count / i * time 1.3 ** 45 * time 10 / sin * + deg->rad rotate
		} \min
		0 0 0
	]
;

:m bgcolor [ 1 1 1 ] ;

:m texture ( d p )
	p distance-field .yzw =mat
			d 85 * abs
			d neg 100 * 0 1 clamp
		- abs
		0 1
	clamp =val
		val mat *
	 	bgcolor
		val
	mix
;

iResolution frag->position =p
[ { distance-field .x } p gradient p texture 1 ] =gl_FragColor
